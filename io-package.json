{
    "common": {
        "name":                     "ubuntu",
        "title":                    "Ubuntu-Monitor",
        "desc":                     {
            "en": "Ubuntu-Monitor for ioBroker Installations",
            "de": "Ubuntu-Monitor für ioBroker",
            "ru": "Ubuntu-Монитор для ioBroker"
        },

        "version":                  "0.1.2",
        "news": {
        "0.1.2": {
                "en": "added Disk space (sda2-sdc2)"
            }
        },
        "0.1.1": {
                "en": "added Disk space (sda1 fixed)"
            }
        },
        "0.1.0": {
                "en": "Initial fork from ioBroker.nuc",
                "de": "Initialer Fork von iobroker.nuc"
            }
        },
        "mode":                     "daemon",
        "platform":                 "javascript/Node.js",
        "os":                       ["linux"],
        "loglevel":                 "info",
        "keywords":                 ["ioBroker", "monitoring", "ubuntu", "linux"],
        "main":                     "main.js",
        "authors": [
            "Christian Baumgartner", "husky-koglhof <husky.koglhof@icloud.com>",
        "Torsten Enkelmann", "T. Enkelmann <t.enkelmann@web.de>",
        "Sebastian Köhler", "sebastian <sebastian@indibit.de>"
        ],
        "license":                  "MIT",
        "singletonHost":             true,
        "readme":                   "https://github.com/indiBit/ioBroker.ubuntu/blob/master/README.md",
        "icon":                     "ubuntu.png",
        "type":                     "hardware",
        "enabled":                  true,
        "config":{
            "minWidth":   650,
            "width":      700,
            "minHeight":  600,
            "height":     600
        },
        "extIcon":                  "https://raw.githubusercontent.com/indiBit/ioBroker.ubuntu/master/admin/ubuntu.png"
    },
    "native": {
        "c_cpu": true,
        "c_memory": true,
        "c_disk_sda1": true,
        "c_disk_sda2": false,
        "c_disk_sdb1": false,
        "c_disk_sdb2": false,
        "c_disk_sdc1": false,
        "c_disk_sdc2": false,
        "c_network": true,
        "c_swap": true,
        "c_temperature": false,
        "c_uptime": true,
        "c_wlan": false,
        "interval": 60000,
        "cpu": {
            "cpu_frequency": {
                "command": "lscpu | grep MHz",
                "regexp": "MHz:\\s+(\\S+)",
                "post": "$1/1000"
            },
            "load1,load5,load15": {
                "command": "cat /proc/loadavg",
                "regexp": "^(\\S+)\\s(\\S+)\\s(\\S+)",
                "post": ""
            }
        },
        "memory": {
            "memory_total": {
                "command": "cat /proc/meminfo",
                "regexp": "MemTotal:\\s+(\\d+)",
                "post": "$1/1024"
            },
            "memory_free": {
                "command": "cat /proc/meminfo",
                "regexp": "MemFree:\\s+(\\d+)",
                "post": "$1/1024"
            },
            "memory_available": {
                "command": "cat /proc/meminfo",
                "regexp": "MemAvailable:\\s+(\\d+)",
                "post": "$1/1024"
            }
        },
        "disk_sda1": {
            "disk_total": {
                "command": "df | grep sda1",
                "regexp": "sda1\\s+(\\d+)",
                "post": "$1/1024"
            },
            "disk_used": {
                "command": "df | grep sda1",
                "regexp": "sda1\\s+\\d+\\s+(\\d+)",
                "post": "$1/1024"
            },
            "disk_used_percent": {
                "command": "df | grep sda1",
                "regexp": "sda1\\s+\\d+\\s+\\d+\\s+\\d+\\s+(\\d+)",
                "post": ""
            },
            "disk_available": {
                "command": "df | grep sda1",
                "regexp": "sda1\\s+\\d+\\s+\\d+\\s+(\\d+)",
                "post": "$1/1024"
            }
        },
        "disk_sda2": {
            "disk_total": {
                "command": "df | grep sda2",
                "regexp": "sda2\\s+(\\d+)",
                "post": "$1/1024"
            },
            "disk_used": {
                "command": "df | grep sda2",
                "regexp": "sda2\\s+\\d+\\s+(\\d+)",
                "post": "$1/1024"
            },
            "disk_used_percent": {
                "command": "df | grep sda2",
                "regexp": "sda2\\s+\\d+\\s+\\d+\\s+\\d+\\s+(\\d+)",
                "post": ""
            },
            "disk_available": {
                "command": "df | grep sda2",
                "regexp": "sda2\\s+\\d+\\s+\\d+\\s+(\\d+)",
                "post": "$1/1024"
            }
        },
        "disk_sdb1": {
            "disk_total": {
                "command": "df | grep sdb1",
                "regexp": "sdb1\\s+(\\d+)",
                "post": "$1/1024"
            },
            "disk_used": {
                "command": "df | grep sdb1",
                "regexp": "sdb1\\s+\\d+\\s+(\\d+)",
                "post": "$1/1024"
            },
            "disk_used_percent": {
                "command": "df | grep sdb1",
                "regexp": "sda1\\s+\\d+\\s+\\d+\\s+\\d+\\s+(\\d+)",
                "post": ""
            },
            "disk_available": {
                "command": "df | grep sdb1",
                "regexp": "sdb1\\s+\\d+\\s+\\d+\\s+(\\d+)",
                "post": "$1/1024"
            }
        },
        "disk_sdb2": {
            "disk_total": {
                "command": "df | grep sdb2",
                "regexp": "sdb2\\s+(\\d+)",
                "post": "$1/1024"
            },
            "disk_used": {
                "command": "df | grep sdb2",
                "regexp": "sdb2\\s+\\d+\\s+(\\d+)",
                "post": "$1/1024"
            },
            "disk_used_percent": {
                "command": "df | grep sdb2",
                "regexp": "sda2\\s+\\d+\\s+\\d+\\s+\\d+\\s+(\\d+)",
                "post": ""
            },
            "disk_available": {
                "command": "df | grep sdb2",
                "regexp": "sdb2\\s+\\d+\\s+\\d+\\s+(\\d+)",
                "post": "$1/1024"
            }
        },
        "disk_sdc1": {
            "disk_total": {
                "command": "df | grep sdc1",
                "regexp": "sdc1\\s+(\\d+)",
                "post": "$1/1024"
            },
            "disk_used": {
                "command": "df | grep sdc1",
                "regexp": "sdc1\\s+\\d+\\s+(\\d+)",
                "post": "$1/1024"
            },
            "disk_used_percent": {
                "command": "df | grep sdc1",
                "regexp": "sdc1\\s+\\d+\\s+\\d+\\s+\\d+\\s+(\\d+)",
                "post": ""
            },
            "disk_available": {
                "command": "df | grep sdc1",
                "regexp": "sdc1\\s+\\d+\\s+\\d+\\s+(\\d+)",
                "post": "$1/1024"
            }
        },
        "disk_sdc2": {
            "disk_total": {
                "command": "df | grep sdc2",
                "regexp": "sdc2\\s+(\\d+)",
                "post": "$1/1024"
            },
            "disk_used": {
                "command": "df | grep sdc2",
                "regexp": "sdc2\\s+\\d+\\s+(\\d+)",
                "post": "$1/1024"
            },
            "disk_used_percent": {
                "command": "df | grep sdc2",
                "regexp": "sdc2\\s+\\d+\\s+\\d+\\s+\\d+\\s+(\\d+)",
                "post": ""
            },
            "disk_available": {
                "command": "df | grep sdc2",
                "regexp": "sdc2\\s+\\d+\\s+\\d+\\s+(\\d+)",
                "post": "$1/1024"
            }
        },
        "network": {
            "net_received": {
                "command": "cat /sys/class/net/`ls /sys/class/net | grep 'en.*'`/statistics/rx_bytes",
                "regexp": "(.*)",
                "post": ""
            },
            "net_send": {
                "command": "cat /sys/class/net/`ls /sys/class/net | grep 'en.*'`/statistics/tx_bytes",
                "regexp": "(.*)",
                "post": ""
            }
        },
        "swap": {
            "swap_total": {
                "command": "cat /proc/meminfo",
                "regexp": "SwapTotal:\\s+(\\d+)",
                "post": "$1/1024",
                "multiline": true
            },
            "swap_used": {
                "command": "cat /proc/meminfo",
                "regexp": "SwapFree:\\s+(\\d+)",
                "post": "(rpi.swap_total - $1)/1024",
                "multiline": true
            }
        },
        "temperature": {
            "soc_temp": {
                "command": "sensors | grep Core",
                "regexp": "Core\\s0:\\s+\\+(\\S+)°C",
                "post": ""
            }
        },
        "uptime": {
            "uptime": {
                "command": "cat /proc/uptime",
                "regexp": "(^\\S+)",
                "post": ""
            }
        },
        "wlan": {
            "wifi_received": {
                "command": "cat /sys/class/net/`ls /sys/class/net | grep 'wl.*'`/statistics/rx_bytes",
                "regexp": "(.*)",
                "post": ""
            },
            "wifi_send": {
                "command": "cat /sys/class/net/`ls /sys/class/net | grep 'wl.*'`/statistics/tx_bytes",
                "regexp": "(.*)",
                "post": ""
            }
        }
    },
    "objects": [
    ],
    "instanceObjects": [
    ]
}
